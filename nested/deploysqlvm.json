{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vmname": {
      "type": "string"
    },
    "domainpassword": {
      "type": "securestring",
      "metadata": {
        "description": "password for domain and for domain admin."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "password for domain and forlocal admin."
      }
    },
    "workspaceId": {
      "type": "securestring",
      "metadata": {
        "description": "Workspace ID for OMS."
      }
    },
    "workspaceKey": {
      "type": "securestring",
      "metadata": {
        "description": "Workspace Key for OMS."
      }
    },
    "existingRG": {
      "type": "string",
      "defaultValue": "temp-RG",
      "metadata": {
        "description": "existing RG for network."
      }
    },
    "StorageAccount": {
      "type": "string",
      "metadata": {
        "description": "ID location for Storage Account"
      }
    },
    "network": {
      "type": "object",
      "metadata": {
        "description": "existing network information"
      }
    }
  },
  "variables": {
    "OSSettings": {
      "imagePublisher": "MicrosoftSQLServer",
      "imageOffer": "SQL2014SP2-WS2012R2-BYOL",
      "vmOsSku": "Enterprise",
      "vmAdminUsername": "adadministrator",
      "vmSize": "Standard_D2",
      "vmDataDiskSize": "300"
    },
    "SQLSettings": {
      "sqlAutopatchingDayOfWeek": "Sunday",
      "sqlAutopatchingStartHour": "2",
      "sqlAutopatchingWindowDuration": "60",
      "sqlConnectivityType": "Private",
      "sqlPortNumber": "1433",
      "sqlStorageWorkloadType": "GENERAL",
      "sqlStorageDisksCount": 1,
      "sqlStorageStartingDeviceId": 2,
      "sqlStorageDisksConfigurationType": "NEW",
      "rServicesEnabled": "true\";",
      "sqlAuthenticationLogin": "[variables('OSSettings').vmAdminUsername]",
      "sqlAuthenticationPassword": "[parameters('adminPassword')]"
    },
    "location": "[resourceGroup().location]",
    "publicIPAddressName": "[tolower(concat(parameters('vmname'),'-pip'))]",
    "publicIPAddressType": "Dynamic",
    "vmNicName": "[tolower(concat(parameters('vmname'),'-nic'))]",
    "vnetID": "[resourceId(parameters('network').existingVNETRGName, 'Microsoft.Network/virtualNetworks', parameters('network').existingVNETName)]",
    "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('network').subnetId)]",

    "vmconfig": {
      "domaintojoin": "corp.convatec.com",
      "configurationFunction": "iiswebsite.ps1\\iiswebsite",
      "modulesUrl": "https://github.com/cmadden77/IFWeek2017/raw/master/iiswebsite.zip"
    },
    "keyvault": {
      "subscriptionID": "/subscriptions/91716dc0-0018-48e4-84ad-db239ee753db/resourceGroups/",
      "existingKVRGName": "Restricted-Prod-EU2-RG",
      "existingKVName": "Deployment-Prod-EU2-KV",
      "LocalPasswordSecret": "Temp-Localadminpassword",
      "DomainJoinPasswordSecret": "Temp-DomainJoinPassword",
      "OMSPrimarySecret": "ConvaTecOMSPrimaryKey",
      "OMSWorkspace": "ConvaTectOMSWorkSpace",
      "aadClientSecret": "aadClientSecret"
    },
    "keyVaultURL": "[concat('https://', variables('keyvault').existingKVName, '.vault.azure.net/')]",
    "keyVaultResourceID": "[concat(subscription().id,'/resourceGroups/',variables('keyvault').existingKVRGName,'/providers/Microsoft.KeyVault/vaults/', variables('keyvault').existingKVName)]",

    "apiVersion": "2015-06-15"
  },
  "resources": [
    {
      "name": "[parameters('vmname')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2016-03-30",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('vmNicName'))]"
      ],
      "properties": {
        "osProfile": {
          "computerName": "[parameters('vmname')]",
          "adminUsername": "[variables('OSSettings').vmAdminUsername]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "provisionVmAgent": "true"
          }
        },
        "hardwareProfile": {
          "vmSize": "[variables('OSSettings').vmSize]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftSQLServer",
            "offer": "SQL2014SP2-WS2012R2-BYOL",
            "sku": "Enterprise",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(parameters('vmname'),'OSDisk')]",
            "createOption": "fromImage",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', parameters('StorageAccount')),providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob,'vhds/',parameters('vmname'),'-OSdisk.vhd')]"
            }
          },
          "dataDisks": [
            {
              "name": "[concat(parameters('vmname'),'Datadisk-0')]",
              "createOption": "empty",
              "lun": 0,
              "diskSizeGB": "1023",
              "caching": "ReadOnly",
              "vhd": {
                "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', parameters('StorageAccount')),providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob,'vhds/',parameters('vmname'),'-Datadisk-0.vhd')]"
              }
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vmNicName'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "apiVersion": "[variables('apiVersion')]",
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(parameters('vmName'),'/joindomain')]",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/',parameters('vmName'))]"
          ],
          "properties": {
            "protectedsettings": {
              "Password": "[parameters('domainPassword')]"
            },
            "publisher": "Microsoft.Compute",
            "settings": {
              "Name": "[variables('vmconfig').domainToJoin]",
              "User": "[concat(variables('vmconfig').domainToJoin,'\\', variables('OSSettings').vmAdminUsername)]",
              "Restart": "true",
              "Options": 3
            },
            "type": "JsonADDomainExtension",
            "typeHandlerVersion": "1.0"
          }
        },
        
        {
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(parameters('vmName'),'/','Antimalware')]",
          "apiVersion": "2015-05-01-preview",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/',parameters('vmName'))]",
            "[concat('Microsoft.Compute/virtualMachines/',parameters('vmName'),'/extensions/','joindomain')]"
          ],
          "properties": {
            "publisher": "Microsoft.Azure.Security",
            "type": "IaaSAntimalware",
            "typeHandlerVersion": "1.1",
            "settings": {
              "AntimalwareEnabled": "true",
              "Exclusions": {
                "Paths": "f:\\sysvol\\;f:\\ntds\\;",
                "Extensions": ".mdf;.ldf;.ndf;.bak;.trn;.edb;.sdb;.chk;.jrs;.pol;.dit",
                "Processes": "sqlserver.exe;ReportingServicesService.exe;MSMDSrv.exe"
              },
              "RealtimeProtectionEnabled": "true",
              "ScheduledScanSettings": {
                "isEnabled": "true",
                "scanType": "Quick",
                "day": "7",
                "time": "120"
              }
            },
            "protectedSettings": null
          }
        },
        {
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(parameters('vmName'), '/Microsoft.EnterpriseCloud.Monitoring')]",
          "apiVersion": "2015-06-15",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/',parameters('vmName'))]",
            "[concat('Microsoft.Compute/virtualMachines/',parameters('vmName'),'/extensions/','Antimalware')]"
          ],
          "properties": {
            "publisher": "Microsoft.EnterpriseCloud.Monitoring",
            "type": "MicrosoftMonitoringAgent",
            "typeHandlerVersion": "1.0",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "workspaceId": "[parameters('workspaceId')]"
            },
            "protectedSettings": {
              "workspaceKey": "[parameters('workspaceKey')]"
            }
          }
        }


      ]
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('vmname'), '/SqlIaasExtension')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('vmname'))]"
      ],
      "properties": {
        "type": "SqlIaaSAgent",
        "publisher": "Microsoft.SqlServer.Management",
        "typeHandlerVersion": "1.2",
        "autoUpgradeMinorVersion": "true",
        "settings": {
          "AutoTelemetrySettings": {
            "Region": "[variables('location')]"
          },
          "AutoPatchingSettings": {
            "PatchCategory": "WindowsMandatoryUpdates",
            "Enable": true,
            "DayOfWeek": "[variables('SQLSettings').sqlAutopatchingDayOfWeek]",
            "MaintenanceWindowStartingHour": "[variables('SQLSettings').sqlAutopatchingStartHour]",
            "MaintenanceWindowDuration": "[variables('SQLSettings').sqlAutopatchingWindowDuration]"
          },
          "KeyVaultCredentialSettings": {
            "Enable": false,
            "CredentialName": ""
          },
          "ServerConfigurationsManagementSettings": {
            "SQLConnectivityUpdateSettings": {
              "ConnectivityType": "[variables('SQLSettings').sqlConnectivityType]",
              "Port": "[variables('SQLSettings').sqlPortNumber]"
            },
            "SQLWorkloadTypeUpdateSettings": {
              "SQLWorkloadType": "[variables('SQLSettings').sqlStorageWorkloadType]"
            },
            "SQLStorageUpdateSettings": {
              "DiskCount": "[variables('SQLSettings').sqlStorageDisksCount]",
              "NumberOfColumns": "[variables('SQLSettings').sqlStorageDisksCount]",
              "StartingDeviceID": "[variables('SQLSettings').sqlStorageStartingDeviceId]",
              "DiskConfigurationType": "[variables('SQLSettings').sqlStorageDisksConfigurationType]"
            },
            "AdditionalFeaturesServerConfigurations": {
              "IsRServicesEnabled": "[variables('SQLSettings').rServicesEnabled]"
            }
          }
        },
        "protectedSettings": {
          "SQLAuthUpdateUserName": "[variables('SQLSettings').sqlAuthenticationLogin]",
          "SQLAuthUpdatePassword": "[variables('SQLSettings').sqlAuthenticationPassword]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('vmNicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/',variables('publicIPAddressName'))]"

      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfigpublic",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(variables('publicIPAddressName')))]"
              },
              "subnet": {
                "id": "[variables('subnetref')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]"
      }
    }
  ],
  "outputs": {
    "adminUsername": {
      "type": "string",
      "value": "[variables('OSSettings').adminUsername]"
    }
  }
}